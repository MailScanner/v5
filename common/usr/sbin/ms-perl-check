#!/usr/bin/env bash

# MailScanner perl module checker
#
# This script will check for any missing perl modules.
#
# MailScanner Team <https://mailscanner.info>
# 25 Feb 2023

# check for perldoc
if [ ! -x /usr/bin/perldoc ]; then
	clear
	echo;
	echo "The perldoc command cannot be found. I need this program to check your";
	echo "modules. Install it or edit this script to point to the correct location.";
	echo;
	exit 1
else
	PERLDOC='/usr/bin/perldoc';
fi

# the array of perl modules needed

# MailScanner (based on code dependencies and run checks)
ARMOD=();
ARMOD+=('AnyDBM_File');
ARMOD+=('Archive::Zip');
ARMOD+=('Carp');
ARMOD+=('Compress::Raw::Zlib'); 
ARMOD+=('Compress::Zlib');
ARMOD+=('Cwd');
ARMOD+=('Data::Dumper');
ARMOD+=('DateTime');
ARMOD+=('DBI');
ARMOD+=('Digest::MD5');
ARMOD+=('DirHandle');
ARMOD+=('Encode');
ARMOD+=('Env');
ARMOD+=('Fcntl');
ARMOD+=('File::Basename');
ARMOD+=('File::Copy');
ARMOD+=('FileHandle');
ARMOD+=('File::Path');
ARMOD+=('Filesys::Df');
ARMOD+=('File::Temp');
ARMOD+=('Getopt::Long');
ARMOD+=('HTML::Entities');
ARMOD+=('HTML::Parser');
ARMOD+=('HTML::TokeParser');
ARMOD+=('IO::File');
ARMOD+=('IO::Handle');
ARMOD+=('IO::Pipe');
ARMOD+=('IO::Socket::INET');
ARMOD+=('IO::Socket::UNIX');
ARMOD+=('IO::Stringy');
ARMOD+=('IPC::Open2');
ARMOD+=('LWP::UserAgent');
ARMOD+=('MIME::Decoder');
ARMOD+=('MIME::Decoder::UU');
ARMOD+=('MIME::Head');
ARMOD+=('MIME::Parser');
ARMOD+=('MIME::WordDecoder');
ARMOD+=('Net::CIDR');
ARMOD+=('Net::DNS');
ARMOD+=('Net::DNS::Resolver::Programmable');
ARMOD+=('Net::Domain');
ARMOD+=('OLE::Storage_Lite');
ARMOD+=('POSIX');
ARMOD+=('Sendmail::PMilter');
ARMOD+=('Socket');
ARMOD+=('strict');
ARMOD+=('Sys::Hostname::Long');
ARMOD+=('Sys::SigAction');
ARMOD+=('Sys::Syslog');
ARMOD+=('Time::HiRes');
ARMOD+=('Time::Local');
ARMOD+=('Time::localtime');

# Various mailscanner module potential dependencies
# Not checked just here for reference
# test, build, or runtime dependency
# ARMOD+=('Algorithm::Diff');
# ARMOD+=('B::Hooks::EndOfScope');
# ARMOD+=('Capture::Tiny');
# ARMOD+=('Class::Data::Inheritable');
# ARMOD+=('Class::Inspector');
# ARMOD+=('Class::Method::Modifiers');
# ARMOD+=('Class::Singleton');
# ARMOD+=('Class::Tiny');
# ARMOD+=('Clone'); 
# ARMOD+=('Compress::Raw::Bzip2'); 
# ARMOD+=('Convert::BinHex');
# ARMOD+=('DateTime::Locale');
# ARMOD+=('DateTime::TimeZone');
# ARMOD+=('Devel::StackTrace');
# ARMOD+=('Digest::HMAC');
# ARMOD+=('Dist::CheckConflicts');
# ARMOD+=('Encode::Locale');
# ARMOD+=('Eval::Closure');
# ARMOD+=('Exception::Class');
# ARMOD+=('File::Copy::Recursive');
# ARMOD+=('File::Listing');
# ARMOD+=('File::ShareDir');
# ARMOD+=('File::ShareDir::Install');
# ARMOD+=('HTML::Tagset');
# ARMOD+=('HTTP::Cookies');
# ARMOD+=('HTTP::Date');
# ARMOD+=('HTTP::Message');
# ARMOD+=('HTTP::Negotiate');
# ARMOD+=('Importer');
# ARMOD+=('IO');
# ARMOD+=('IO::HTML');
# ARMOD+=('LWP::MediaTypes');
# ARMOD+=('MailTools');
# ARMOD+=('MIME::Tools');
# ARMOD+=('Module::Build');
# ARMOD+=('Module::Implementation');
# ARMOD+=('Module::Pluggable');
# ARMOD+=('Module::Runtime');
# ARMOD+=('MRO::Compat');
# ARMOD+=('namespace::autoclean');
# ARMOD+=('namespace::clean');
# ARMOD+=('Net::HTTP');
# ARMOD+=('Package::Stash');
# ARMOD+=('Package::Stash::XS');
# ARMOD+=('Params::Util');
# ARMOD+=('Path::Tiny');
# ARMOD+=('Perl::Tidy');
# ARMOD+=('Role::Tiny');
# ARMOD+=('Scope::Guard');
# ARMOD+=('Sub::Exporter::Progressive');
# ARMOD+=('Sub::Identify');
# ARMOD+=('Sub::Info');
# ARMOD+=('Sub::Quote');
# ARMOD+=('Sub::Uplevel');
# ARMOD+=('Term::Table');
# ARMOD+=('Test2::Suite');
# ARMOD+=('Test::Deep');
# ARMOD+=('Test::Exception');
# ARMOD+=('Test::FailWarnings');
# ARMOD+=('Test::Fatal');
# ARMOD+=('Test::File::ShareDir');
# ARMOD+=('Test::LeakTrace');
# ARMOD+=('Test::Requires');
# ARMOD+=('Test::Simple');
# ARMOD+=('Test::Warnings');
# ARMOD+=('Text::Diff');
# ARMOD+=('Try::Tiny');
# ARMOD+=('URI');
# ARMOD+=('WWW::RobotRules');

# SpamAssassin (4.0) required modules
# based on lint test, and runtime includes
ARMOD2+=('Digest::SHA');
ARMOD2+=('HTML::Parser');
ARMOD2+=('Net::DNS');
ARMOD2+=('NetAddr::IP');
ARMOD2+=('Time::HiRes');
ARMOD2+=('Archive::Tar');
ARMOD2+=('IO::Zlib');
ARMOD2+=('File::Basename');
ARMOD2+=('File::Path');
ARMOD2+=('Cwd');
ARMOD2+=('Config');
ARMOD2+=('File::Spec');
ARMOD2+=('File::Path');
ARMOD2+=('Errno');
ARMOD2+=('POSIX');
ARMOD2+=('Fcntl');
ARMOD2+=('IO::Socket');
ARMOD2+=('Exporter');
ARMOD2+=('Socket');
ARMOD2+=('version');
ARMOD2+=('Time::Local');
ARMOD2+=('Sys::Syslog');
ARMOD2+=('Scalar::Util');
ARMOD2+=('Encode');
ARMOD2+=('Data::Dumper');
ARMOD2+=('IO::Select');
ARMOD2+=('Storable');
ARMOD2+=('Digest::MD5');
ARMOD2+=('Carp');
ARMOD2+=('IO::Socket::UNIX');
ARMOD2+=('IO::Handle');

# SpamAssassin (4.0) optional modules
ARMOD3+=('Digest::SHA1');
ARMOD3+=('MIME::Base64');
ARMOD3+=('DB_File');
ARMOD3+=('Net::SMTP');
ARMOD3+=('Net::LibIDN');
ARMOD3+=('Net::LibIDN2');
ARMOD3+=('Mail::SPF');
ARMOD3+=('MaxMind::DB::Reader::XS');
ARMOD3+=('MaxMind::DB::Reader');
ARMOD3+=('Geo::IP');
ARMOD3+=('IP::Country::DB_File');
ARMOD3+=('IP::Country::Fast');
ARMOD3+=('Razor2::Client::Agent');
ARMOD3+=('IO::Socket::IP');
ARMOD3+=('IO::Socket::INET6');
ARMOD3+=('IO::Socket::SSL');
ARMOD3+=('Compress::Zlib');
ARMOD3+=('Mail::DKIM');
ARMOD3+=('DBI');
ARMOD3+=('DBD::SQLite');
ARMOD3+=('LWP::UserAgent');
ARMOD3+=('Encode::Detect::Detector');
ARMOD3+=('Net::Patricia');
ARMOD3+=('Net::CIDR::Lite');
ARMOD3+=('Net::DNS::Nameserver');
ARMOD3+=('BSD::Resource');
ARMOD3+=('Archive::Zip');
ARMOD3+=('IO::String');
ARMOD3+=('Email::Address::XS');
ARMOD3+=('Mail::DMARC');

# SpamAssassin (4.0) dependencies
# Not checked just here for reference
# test, build, or runtime dependency
# ARMOD2+=('Alien::Build::Plugin::Download::GitLab');
# ARMOD2+=('Alien::Build');
# ARMOD2+=('Alien::Libxml2');
# ARMOD2+=('Authen::SASL');
# ARMOD2+=('B::Keywords');
# ARMOD2+=('Config::Tiny');
# ARMOD2+=('Crypt::OpenSSL::Random');
# ARMOD2+=('Crypt::OpenSSL::RSA');
# ARMOD2+=('Data::Dumper::Concise');
# ARMOD2+=('Data::IEEE754');
# ARMOD2+=('Data::OptList');
# ARMOD2+=('Data::Printer');
# ARMOD2+=('Data::Validate::IP');
# ARMOD2+=('DBIx::Simple');
# ARMOD2+=('Devel::Cycle');
# ARMOD2+=('Email::Abstract');
# ARMOD2+=('Email::Date::Format');
# ARMOD2+=('Email::MessageID');
# ARMOD2+=('Email::MIME::ContentType');
# ARMOD2+=('Email::MIME::Encodings');
# ARMOD2+=('Email::MIME');
# ARMOD2+=('Email::Sender');
# ARMOD2+=('Email::Simple');
# ARMOD2+=('Encode::Detect');
# ARMOD2+=('FFI::CheckLib');
# ARMOD2+=('File::chdir');
# ARMOD2+=('File::Which');
# ARMOD2+=('Geography::Countries');
# ARMOD2+=('IP::Country');
# ARMOD2+=('List::AllUtils');
# ARMOD2+=('List::SomeUtils::XS');
# ARMOD2+=('List::SomeUtils');
# ARMOD2+=('List::UtilsBy');
# ARMOD2+=('Math::Int64');
# ARMOD2+=('MaxMind::DB::Common');
# ARMOD2+=('MIME::Types');
# ARMOD2+=('Moo');
# ARMOD2+=('MooX::StrictConstructor');
# ARMOD2+=('MooX::Types::MooseLike');
# ARMOD2+=('Mozilla::CA');
# ARMOD2+=('Net::IDN::Encode');
# ARMOD2+=('Net::IMAP::Simple');
# ARMOD2+=('Net::IP');
# ARMOD2+=('Net::SMTPS');
# ARMOD2+=('Net::SSLeay');
# ARMOD2+=('Parse::RecDescent');
# ARMOD2+=('Path::Class');
# ARMOD2+=('Perl::Critic::Policy::Perlsecret');
# ARMOD2+=('Perl::Critic');
# ARMOD2+=('Pod::Parser');
# ARMOD2+=('Pod::Spell');
# ARMOD2+=('PPI');
# ARMOD2+=('PPIx::Regexp');
# ARMOD2+=('PPIx::Utilities');   
# ARMOD2+=('Readonly');
# ARMOD2+=('Regexp::Common');
# ARMOD2+=('Socket6');
# ARMOD2+=('strictures');
# ARMOD2+=('String::Format');
# ARMOD2+=('Sub::Exporter');
# ARMOD2+=('Sub::Install');
# ARMOD2+=('Task::Weaken');
# ARMOD2+=('Test::Output');
# ARMOD2+=('Test::Pod');
# ARMOD2+=('Test::Regexp');
# ARMOD2+=('Throwable');
# ARMOD2+=('XML::LibXML');
# ARMOD2+=('YAML');

# More modules
# Not checked just here for reference
# test, build, or runtime dependency
# ARMOD2+=('autodie');
# ARMOD2+=('bignum');
# ARMOD2+=('Clone::PP');
# ARMOD2+=('Convert::TNEF');
# ARMOD2+=('CPAN');
# ARMOD2+=('Data::Dump');
# ARMOD2+=('Date::Parse');
# ARMOD2+=('DBD::SQLite');
# ARMOD2+=('Digest');
# ARMOD2+=('Error');
# ARMOD2+=('ExtUtils::CBuilder');
# ARMOD2+=('ExtUtils::MakeMaker');
# ARMOD2+=('ExtUtils::ParseXS');
# ARMOD2+=('File::HomeDir');
# ARMOD2+=('Inline::C');
# ARMOD2+=('Inline');
# ARMOD2+=('IO::Compress::Bzip2');
# ARMOD2+=('IO::Wrap');
# ARMOD2+=('JSON::MaybeXS');
# ARMOD2+=('Mail::Field');
# ARMOD2+=('Mail::Header');
# ARMOD2+=('Mail::IMAPClient');
# ARMOD2+=('Mail::Internet');
# ARMOD2+=('Mail::SPF::Query');
# ARMOD2+=('Math::BigInt');
# ARMOD2+=('Math::BigRat');
# ARMOD2+=('Math::Int128');
# ARMOD2+=('MaxMind::DB::Metadata');
# ARMOD2+=('MIME::QuotedPrint');
# ARMOD2+=('Net::LDAP');
# ARMOD2+=('Net::SSLeay');
# ARMOD2+=('Net::Works::Network');
# ARMOD2+=('Parse::RecDescent');
# ARMOD2+=('Perl::Critic::Policy::TestingAndDebugging::ProhibitNoStrict');
# ARMOD2+=('Perl::Critic::Policy');
# ARMOD2+=('Pod::Escapes');
# ARMOD2+=('Pod::Simple');
# ARMOD2+=('Sort::Naturally');
# ARMOD2+=('String::Format');
# ARMOD2+=('Test::Harness');
# ARMOD2+=('Test::Manifest');
# ARMOD2+=('Test::Output');
# ARMOD2+=('Test::Perl::Critic');
# ARMOD2+=('Test::Tester');
# ARMOD2+=('Text::Balanced');
# ARMOD2+=('XML::NamespaceSupport');
# ARMOD2+=('XML::SAX::Base');
# ARMOD2+=('XML::SAX');

# additional spamassassin plugins				
ARMOD+=('Mail::SpamAssassin::Plugin::Rule2XSBody');		
ARMOD+=('Mail::SpamAssassin::Plugin::DCC');				
ARMOD+=('Mail::SpamAssassin::Plugin::Pyzor');
ARMOD+=('Mail::SpamAssassin');

for i in "${ARMOD[@]}"
do
	$PERLDOC -l $i >/dev/null 2>&1
	if [ $? != 0 ]; then
		echo "WARNING: MailScanner module $i => Missing";
	else
		echo "$i => OK";
	fi
done

for i in "${ARMOD2[@]}"
do
	$PERLDOC -l $i >/dev/null 2>&1
	if [ $? != 0 ]; then
		echo "WARNING: SpamAssassin module $i => Missing";
	else
		echo "$i => OK";
	fi
done


for i in "${ARMOD3[@]}"
do
	$PERLDOC -l $i >/dev/null 2>&1
	if [ $? != 0 ]; then
		echo "OPTIONAL: SpamAssassin module $i => Missing";
	else
		echo "$i => OK";
	fi
done
